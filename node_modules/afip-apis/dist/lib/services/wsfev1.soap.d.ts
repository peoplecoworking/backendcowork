import { SoapService } from "./soap12";
import * as service from "./wsdl/wsfe1Service/ServiceSoap12";
export { ServiceSoap12Types as Wsfev1Types } from "./wsdl/wsfe1Service/ServiceSoap12";
export declare class Wsfev1 extends SoapService implements service.IServiceSoap12Soap {
    static get serviceId(): string;
    static get produccionWSDL(): string;
    static get testWSDL(): string;
    FECAEAConsultar: (input: service.IFECAEAConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IFECAEAConsultarOutput>;
    FECAEARegInformativo: (input: service.IFECAEARegInformativoInput, options?: any, extraHeaders?: any) => Promise<service.IFECAEARegInformativoOutput>;
    FECAEASinMovimientoConsultar: (input: service.IFECAEASinMovimientoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IFECAEASinMovimientoConsultarOutput>;
    FECAEASinMovimientoInformar: (input: service.IFECAEASinMovimientoInformarInput, options?: any, extraHeaders?: any) => Promise<service.IFECAEASinMovimientoInformarOutput>;
    FECAEASolicitar: (input: service.IFECAEASolicitarInput, options?: any, extraHeaders?: any) => Promise<service.IFECAEASolicitarOutput>;
    FECAESolicitar: (input: service.IFECAESolicitarInput, options?: any, extraHeaders?: any) => Promise<service.IFECAESolicitarOutput>;
    FECompConsultar: (input: service.IFECompConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IFECompConsultarOutput>;
    FECompTotXRequest: (input: service.IFECompTotXRequestInput, options?: any, extraHeaders?: any) => Promise<service.IFECompTotXRequestOutput>;
    FECompUltimoAutorizado: (input: service.IFECompUltimoAutorizadoInput, options?: any, extraHeaders?: any) => Promise<service.IFECompUltimoAutorizadoOutput>;
    FEParamGetCotizacion: (input: service.IFEParamGetCotizacionInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetCotizacionOutput>;
    FEParamGetPtosVenta: (input: service.IFEParamGetPtosVentaInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetPtosVentaOutput>;
    FEParamGetTiposCbte: (input: service.IFEParamGetTiposCbteInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposCbteOutput>;
    FEParamGetTiposConcepto: (input: service.IFEParamGetTiposConceptoInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposConceptoOutput>;
    FEParamGetTiposDoc: (input: service.IFEParamGetTiposDocInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposDocOutput>;
    FEParamGetTiposIva: (input: service.IFEParamGetTiposIvaInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposIvaOutput>;
    FEParamGetTiposMonedas: (input: service.IFEParamGetTiposMonedasInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposMonedasOutput>;
    FEParamGetTiposOpcional: (input: service.IFEParamGetTiposOpcionalInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposOpcionalOutput>;
    FEParamGetTiposPaises: (input: service.IFEParamGetTiposPaisesInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposPaisesOutput>;
    FEParamGetTiposTributos: (input: service.IFEParamGetTiposTributosInput, options?: any, extraHeaders?: any) => Promise<service.IFEParamGetTiposTributosOutput>;
    FEDummy(input?: service.IFEDummyInput, options?: any, extraHeaders?: any): Promise<service.IFEDummyOutput>;
}
