import { SoapService } from "./soap11";
import * as service from "./wsdl/RemHarinaService/RemHarinaServiceSOAP";
export { RemHarinaServiceSOAPTypes } from "./wsdl/RemHarinaService/RemHarinaServiceSOAP";
export declare class RemHarinaService extends SoapService implements service.IRemHarinaServiceSOAPSoap {
    static get serviceId(): string;
    static get produccionWSDL(): string;
    static get testWSDL(): string;
    dummy: (options?: any, extraHeaders?: any) => Promise<service.IdummyOutput>;
    generarRemito: (input: service.IgenerarRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IgenerarRemitoOutput>;
    autorizarRemito: (input: service.IautorizarRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IautorizarRemitoOutput>;
    anularRemito: (input: service.IanularRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IanularRemitoOutput>;
    emitirRemito: (input: service.IemitirRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IemitirRemitoOutput>;
    registrarRecepcion: (input: service.IregistrarRecepcionInput, options?: any, extraHeaders?: any) => Promise<service.IregistrarRecepcionOutput>;
    modificarViaje: (input: service.ImodificarViajeInput, options?: any, extraHeaders?: any) => Promise<service.ImodificarViajeOutput>;
    informarContingencia: (input: service.IinformarContingenciaInput, options?: any, extraHeaders?: any) => Promise<service.IinformarContingenciaOutput>;
    consultarUltimoRemitoEmitido: (input: service.IconsultarUltimoRemitoEmitidoInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarUltimoRemitoEmitidoOutput>;
    consultarRemito: (input: service.IconsultarRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarRemitoOutput>;
    consultarTiposComprobante: (input: service.IconsultarTiposComprobanteInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarTiposComprobanteOutput>;
    consultarTiposEstado: (input: service.IconsultarTiposEstadoInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarTiposEstadoOutput>;
    consultarTiposContingencia: (input: service.IconsultarTiposContingenciaInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarTiposContingenciaOutput>;
    consultarCodigosDomicilio: (input: service.IconsultarCodigosDomicilioInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarCodigosDomicilioOutput>;
    consultarPuntosEmision: (input: service.IconsultarPuntosEmisionInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarPuntosEmisionOutput>;
    consultarTiposMercaderia: (input: service.IconsultarTiposMercaderiaInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarTiposMercaderiaOutput>;
    consultarUnidadesVenta: (input: service.IconsultarUnidadesVentaInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarUnidadesVentaOutput>;
    consultarTiposEmbalaje: (input: service.IconsultarTiposEmbalajeInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarTiposEmbalajeOutput>;
    consultarRemitosEmisor: (input: service.IconsultarRemitosEmisorInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarRemitosEmisorOutput>;
    consultarRemitosAutorizador: (input: service.IconsultarRemitosAutorizadorInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarRemitosAutorizadorOutput>;
    consultarRemitosReceptor: (input: service.IconsultarRemitosReceptorInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarRemitosReceptorOutput>;
    consultarEstadosRemito: (input: service.IconsultarEstadosRemitoInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarEstadosRemitoOutput>;
    registrarReingreso: (input: service.IregistrarReingresoInput, options?: any, extraHeaders?: any) => Promise<service.IregistrarReingresoOutput>;
    registrarRedestino: (input: service.IregistrarRedestinoInput, options?: any, extraHeaders?: any) => Promise<service.IregistrarRedestinoOutput>;
    consultarPaises: (input: service.IconsultarPaisesInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarPaisesOutput>;
    consultarAduanas: (input: service.IconsultarAduanasInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarAduanasOutput>;
    consultarProvincias: (input: service.IconsultarProvinciasInput, options?: any, extraHeaders?: any) => Promise<service.IconsultarProvinciasOutput>;
}
