export interface IgetPersonaInput {
    token: string;
    sign: string;
    cuitRepresentada: number;
    idPersona: number;
}
export interface IgetPersonaOutput {
    personaReturn: PersonaServiceA10PortTypes.IpersonaReturn;
}
export interface IdummyInput {
}
export interface IdummyOutput {
    return: PersonaServiceA10PortTypes.Ireturn;
}
export interface IPersonaServiceA10PortSoap {
    getPersona: (input: IgetPersonaInput, cb: (err: any | null, result: IgetPersonaOutput, raw: string, soapHeader: {
        [k: string]: any;
    }) => any, options?: any, extraHeaders?: any) => void;
    dummy: (input: IdummyInput, cb: (err: any | null, result: IdummyOutput, raw: string, soapHeader: {
        [k: string]: any;
    }) => any, options?: any, extraHeaders?: any) => void;
}
export declare namespace PersonaServiceA10PortTypes {
    interface Imetadata {
        fechaHora: Date;
        servidor: string;
    }
    interface Idependencia {
        descripcionDependencia: string;
        idDependencia: number;
    }
    interface Idomicilio {
        codPostal: string;
        datoAdicional: string;
        descripcionProvincia: string;
        direccion: string;
        idProvincia: number;
        localidad: string;
        tipoDatoAdicional: string;
        tipoDomicilio: string;
    }
    interface Ipersona {
        apellido: string;
        claveInactivaAsociada: number;
        dependencia: PersonaServiceA10PortTypes.Idependencia;
        descripcionActividadPrincipal: string;
        domicilio: PersonaServiceA10PortTypes.Idomicilio[];
        estadoClave: string;
        idActividadPrincipal: number;
        idPersona: number;
        nombre: string;
        numeroDocumento: string;
        razonSocial: string;
        tipoClave: string;
        tipoDocumento: string;
        tipoPersona: string;
    }
    interface IpersonaReturn {
        metadata: PersonaServiceA10PortTypes.Imetadata;
        persona: PersonaServiceA10PortTypes.Ipersona;
    }
    interface Ireturn {
        appserver: string;
        authserver: string;
        dbserver: string;
    }
}
