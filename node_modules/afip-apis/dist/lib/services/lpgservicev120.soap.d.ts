import { SoapService } from "./soap11";
import * as service from "./wsdl/LpgService/LpgEndPoint";
export declare class WsLpgv120 extends SoapService implements service.ILpgEndPointSoap {
    private baseSOAPAction;
    static get serviceId(): string;
    static get produccionWSDL(): string;
    static get testWSDL(): string;
    dummy: (extraHeaders?: any) => Promise<service.IdummyOutput>;
    liquidacionAutorizar: (input: service.IliquidacionAutorizarInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionAutorizarOutput>;
    provinciasConsultar: (input: service.IprovinciasConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IprovinciasConsultarOutput>;
    localidadXProvinciaConsultar: (input: service.IlocalidadXProvinciaConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IlocalidadXProvinciaConsultarOutput>;
    tipoOperacionXActividadConsultar: (input: service.ItipoOperacionXActividadConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoOperacionXActividadConsultarOutput>;
    puertoConsultar: (input: service.IpuertoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IpuertoConsultarOutput>;
    tipoActividadConsultar: (input: service.ItipoActividadConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoActividadConsultarOutput>;
    tipoActividadRepresentadoConsultar: (input: service.ItipoActividadRepresentadoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoActividadRepresentadoConsultarOutput>;
    tipoCertificadoDepositoConsultar: (input: service.ItipoCertificadoDepositoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoCertificadoDepositoConsultarOutput>;
    tipoRetencionConsultar: (input: service.ItipoRetencionConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoRetencionConsultarOutput>;
    tipoDeduccionConsultar: (input: service.ItipoDeduccionConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoDeduccionConsultarOutput>;
    tipoGranoConsultar: (input: service.ItipoGranoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.ItipoGranoConsultarOutput>;
    codigoGradoReferenciaConsultar: (input: service.IcodigoGradoReferenciaConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IcodigoGradoReferenciaConsultarOutput>;
    codigoGradoEntregadoXTipoGranoConsultar: (input: service.IcodigoGradoEntregadoXTipoGranoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IcodigoGradoEntregadoXTipoGranoConsultarOutput>;
    campaniasConsultar: (input: service.IcampaniasConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IcampaniasConsultarOutput>;
    liquidacionXCoeConsultar: (input: service.IliquidacionXCoeConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionXCoeConsultarOutput>;
    liquidacionXNroOrdenConsultar: (input: service.IliquidacionXNroOrdenConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionXNroOrdenConsultarOutput>;
    liquidacionUltimoNroOrdenConsultar: (input: service.IliquidacionUltimoNroOrdenConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionUltimoNroOrdenConsultarOutput>;
    liquidacionAnular: (input: service.IliquidacionAnularInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionAnularOutput>;
    liquidacionAjustarUnificado: (input: service.IliquidacionAjustarUnificadoInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionAjustarUnificadoOutput>;
    liquidacionAjustarContrato: (input: service.IliquidacionAjustarContratoInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionAjustarContratoOutput>;
    ajusteXCoeConsultar: (input: service.IajusteXCoeConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IajusteXCoeConsultarOutput>;
    asociarLiquidacionAContrato: (input: service.IasociarLiquidacionAContratoInput, options?: any, extraHeaders?: any) => Promise<service.IasociarLiquidacionAContratoOutput>;
    liquidacionPorContratoConsultar: (input: service.IliquidacionPorContratoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IliquidacionPorContratoConsultarOutput>;
    ajustePorContratoConsultar: (input: service.IajustePorContratoConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IajustePorContratoConsultarOutput>;
    ajusteXNroOrdenConsultar: (input: service.IajusteXNroOrdenConsultarInput, options?: any, extraHeaders?: any) => Promise<service.IajusteXNroOrdenConsultarOutput>;
    lsgAutorizar: (input: service.IlsgAutorizarInput, options?: any, extraHeaders?: any) => Promise<service.IlsgAutorizarOutput>;
    lsgConsultarXCoe: (input: service.IlsgConsultarXCoeInput, options?: any, extraHeaders?: any) => Promise<service.IlsgConsultarXCoeOutput>;
    lsgConsultarXNroOrden: (input: service.IlsgConsultarXNroOrdenInput, options?: any, extraHeaders?: any) => Promise<service.IlsgConsultarXNroOrdenOutput>;
    lsgConsultarUltimoNroOrden: (input: service.IlsgConsultarUltimoNroOrdenInput, options?: any, extraHeaders?: any) => Promise<service.IlsgConsultarUltimoNroOrdenOutput>;
    lsgAnular: (input: service.IlsgAnularInput, options?: any, extraHeaders?: any) => Promise<service.IlsgAnularOutput>;
    lsgAjustarXCoe: (input: service.IlsgAjustarXCoeInput, options?: any, extraHeaders?: any) => Promise<service.IlsgAjustarXCoeOutput>;
    lsgAjustarXContrato: (input: service.IlsgAjustarXContratoInput, options?: any, extraHeaders?: any) => Promise<service.IlsgAjustarXContratoOutput>;
    lsgAsociarAContrato: (input: service.IlsgAsociarAContratoInput, options?: any, extraHeaders?: any) => Promise<service.IlsgAsociarAContratoOutput>;
    lsgConsultarXContrato: (input: service.IlsgConsultarXContratoInput, options?: any, extraHeaders?: any) => Promise<service.IlsgConsultarXContratoOutput>;
    cgAutorizar: (input: service.IcgAutorizarInput, options?: any, extraHeaders?: any) => Promise<service.IcgAutorizarOutput>;
    cgBuscarCtg: (input: service.IcgBuscarCtgInput, options?: any, extraHeaders?: any) => Promise<service.IcgBuscarCtgOutput>;
    cgBuscarCertConSaldoDisponible: (input: service.IcgBuscarCertConSaldoDisponibleInput, options?: any, extraHeaders?: any) => Promise<service.IcgBuscarCertConSaldoDisponibleOutput>;
    cgConsultarUltimoNroOrden: (input: service.IcgConsultarUltimoNroOrdenInput, options?: any, extraHeaders?: any) => Promise<service.IcgConsultarUltimoNroOrdenOutput>;
    cgSolicitarAnulacion: (input: service.IcgSolicitarAnulacionInput, options?: any, extraHeaders?: any) => Promise<service.IcgSolicitarAnulacionOutput>;
    cgConfirmarAnulacion: (input: service.IcgConfirmarAnulacionInput, options?: any, extraHeaders?: any) => Promise<service.IcgConfirmarAnulacionOutput>;
    cgConsultarXCoe: (input: service.IcgConsultarXCoeInput, options?: any, extraHeaders?: any) => Promise<service.IcgConsultarXCoeOutput>;
    cgConsultarXNroOrden: (input: service.IcgConsultarXNroOrdenInput, options?: any, extraHeaders?: any) => Promise<service.IcgConsultarXNroOrdenOutput>;
    cgInformarCalidad: (input: service.IcgInformarCalidadInput, options?: any, extraHeaders?: any) => Promise<service.IcgInformarCalidadOutput>;
    lpgAutorizarAnticipo: (input: service.IlpgAutorizarAnticipoInput, options?: any, extraHeaders?: any) => Promise<service.IlpgAutorizarAnticipoOutput>;
    lpgCancelarAnticipo: (input: service.IlpgCancelarAnticipoInput, options?: any, extraHeaders?: any) => Promise<service.IlpgCancelarAnticipoOutput>;
    private emptyResponse;
}
