import { BaseError } from "../shared/error.server.class";
export interface SoapFault {
    fault: {
        code?: {
            value: string;
            subcode: {
                value: string;
            };
        };
        reason?: {
            Text: string;
        };
        statusCode: number;
    };
    [key: string]: string | number | Record<string, unknown>;
}
export declare class SoapFaultError extends BaseError {
    constructor(code: number, id: string, message: string, extra: SoapFault);
}
export declare class SoapService {
    private _url;
    get url(): string;
    set url(value: string);
    constructor(wsdlUrl?: string);
    invoke<T>(soapEnvelope: string, options?: any, extraHeaders?: any): Promise<T>;
}
